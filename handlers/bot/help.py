from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import CallbackQuery, Message

import keyboards.help as help_kb

router = Router()


class HelpStates(StatesGroup):
    choosing_topic = State()
    writing_message = State()


@router.callback_query(F.data == "help:start")
async def start_help_request(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.answer("–í–∏–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è", reply_markup=help_kb.choose_support_topic())
    await state.set_state(HelpStates.choosing_topic)
    await callback.answer()


@router.callback_query(F.data.startswith("help:support_topic_"), StateFilter(HelpStates.choosing_topic))
async def choose_support_topic(callback: CallbackQuery, state: FSMContext) -> None:
    topic_id = callback.data.split("_")[-1]
    await state.update_data(selected_topic=topic_id)

    await callback.message.answer(f"–û–±—Ä–∞–Ω–æ —Ç–µ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {topic_id}.\n–û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É —è–∫–æ–º–æ–≥–∞ –¥–µ—Ç–∞–ª—å–Ω—ñ—à–µ:")
    await state.set_state(HelpStates.writing_message)

    await callback.answer()


@router.callback_query(F.data == "help:cancel", StateFilter(HelpStates.choosing_topic))
async def cancel_help_request(callback: CallbackQuery, state: FSMContext) -> None:
    await state.clear()
    await callback.message.answer("‚ùå –ó–∞–ø–∏—Ç –¥–æ —Ç–µ—Ö–Ω—ñ—á–Ω–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    await callback.answer()


@router.message(StateFilter(HelpStates.writing_message))
async def write_help_message(message: Message, state: FSMContext) -> None:
    from main import get_bot
    bot = get_bot()

    data = await state.get_data()

    selected_topic = data.get('selected_topic')
    if not selected_topic:
        await state.set_state(HelpStates.choosing_topic)
        await message.answer("–í–∏–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è", reply_markup=help_kb.choose_support_topic())
        return

    # –ë—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π ID –æ–±—Ä–∞—â–µ–Ω–∏—è –∏–∑ –ë–î / —á–∞—Ç–∞ Telegram
    help_message_id = 123

    user = message.from_user
    username = f"@{user.username}" if user.username else "–ë–µ–∑ Username"

    support_message = (
        f"üÜò <b>–ù–æ–≤–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è #{help_message_id} –≤i–¥ {username}</b>\n\n"
        f"üÜî <b>User ID:</b> <code>{user.id}</code>\n"
        f"üìã <b>–¢–µ–º–∞:</b> {selected_topic}\n\n"
        f"üí¨ <b>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b>\n{message.text}"
    )

    try:
        await bot.send_message(
            chat_id=-1002927033457,
            text=support_message,
            parse_mode="HTML",
            reply_markup=help_kb.choose_message_action_for_helpers(username)
        )

        await message.answer(
            f"–ó–≤–µ—Ä–Ω–µ–Ω–Ω—è ‚Ññ{help_message_id} –æ—Ç—Ä–∏–º–∞–Ω–æ. –í—ñ–¥–ø–æ–≤—ñ–º–æ –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω (10:00‚Äì18:00 –∑–∞ –ö–∏—î–≤–æ–º)")
    except Exception as e:
        print(f"Error sending message to support group: {e}")

    await state.clear()
